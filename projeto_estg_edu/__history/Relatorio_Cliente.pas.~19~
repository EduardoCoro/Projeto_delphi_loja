unit Relatorio_Cliente;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, RLReport, DB, ADODB, pngimage;

type
  TRlCliente = class(TForm)
    rlpCliente: TRLReport;
    RLBand1: TRLBand;
    RLLabel1: TRLLabel;
    RLBand2: TRLBand;
    RLBand3: TRLBand;
    RLBand4: TRLBand;
    RLLabel2: TRLLabel;
    rbdResult: TRLDBResult;
    QCliente: TADOQuery;
    DsCliente: TDataSource;
    RLDBText1: TRLDBText;
    RLDBText2: TRLDBText;
    RLDBText3: TRLDBText;
    RLLabel3: TRLLabel;
    V: TRLLabel;
    RLLabel4: TRLLabel;
    RLBand5: TRLBand;
    RLImage1: TRLImage;
    RLLabel5: TRLLabel;
    RLLabel6: TRLLabel;
    RLLabel7: TRLLabel;
    RLLabel8: TRLLabel;
    RLBand6: TRLBand;
    RLLabel9: TRLLabel;
  private
    { Private declarations }
    {procedure carregadados}
    procedure carregadados(xFiltro, xOrdem : Integer);
  public
    { Public declarations }
    procedure chamatela(xFiltro, xOrdem : Integer);

  end;

var
  RlCliente: TRlCliente;

implementation

uses
 DMPrincipal;

{$R *.dfm}

procedure TRlCliente.chamatela(xFiltro, xOrdem : Integer);
begin
  RlCliente := TRlCliente.Create(Application);
  with RlCliente do
  begin

    {chamar carregadados}
    carregadados(xFiltro, xOrdem);

    rlpCliente.PreviewModal;
  end;
  FreeAndNil(RlCliente);
end;

procedure TRlCliente.carregadados(xFiltro: Integer; xOrdem: Integer);
begin
  with QCliente do
  begin
    Close;
    SQL.Add('SELECT COD_CLIENTE, NOME, RG, ATIVO');
    SQL.Add('FROM CLIENTE');
    // FILTRAR ATIVO OU INATIVO
    case xFiltro of
      0: SQL.Add('WHERE ATIVO = 1');
      1: SQL.Add('WHERE ATIVO = 0');
    end;
    // ORDENAÇÃO
    case xOrdem of
      0: SQL.Add('ORDER BY COD_CLIENTE');
      1: SQL.Add('ORDER BY NOME');
    end;
    InputBox('','', SQL.Text);
    ExecSQL;
    Open;
  end;
end;

end.
