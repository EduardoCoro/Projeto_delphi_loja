unit GraficoTopProdutos;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Buttons, ExtCtrls, TeEngine, Series, TeeProcs, Chart,
  DBChart, DB, ADODB;

type
  TTGraficoTopProdutos = class(TForm)
    Panel1: TPanel;
    Label1: TLabel;
    btnCancelar: TBitBtn;
    btnAntes: TBitBtn;
    btnDepois: TBitBtn;
    GraficoProdutos: TDBChart;
    Series1: TBarSeries;
    QProdutos: TADOQuery;
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure btnCancelarClick(Sender: TObject);
    procedure btnDepoisClick(Sender: TObject);
    procedure btnAntesClick(Sender: TObject);
    procedure GraficoProdutosPageChange(Sender: TObject);
  private
    { Private declarations }
    procedure CarregaDados(xDataIni,xDataFim : TDateTime);
  public
    { Public declarations }
    procedure Chamatela(xDataIni,xDataFim : TDateTime);
  end;

var
  TGraficoTopProdutos: TTGraficoTopProdutos;

implementation

uses
 Funcoes, Funcoesdb;

{$R *.dfm}

procedure TTGraficoTopProdutos.Chamatela(xDataIni: TDateTime; xDataFim: TDateTime);
begin
  TGraficoTopProdutos := TTGraficoTopProdutos.Create(Application);
  with TGraficoTopProdutos do
  begin
    CarregaDados(xDataIni,xDataFim);
    if QProdutos.IsEmpty then
    begin
      EnviaMensagem('Registro não encontrado!','Informação...', mtInformation, [mbOK]);
      exit;
    end
    else
      ShowModal;
  end;
  FreeAndNil(TGraficoTopProdutos);
end;

procedure TTGraficoTopProdutos.CarregaDados(xDataIni: TDateTime; xDataFim: TDateTime);
begin
  with QProdutos do
  begin
    Close;
    SQL.Clear;
    SQL.Add('SET DATEFORMAT ymd');
    SQL.Add('SELECT TOP 10 SUM(I.QUANTIDADE) AS COMPRADO, I.COD_PRODUTO, P.DESCRICAO , P.PRECO,  P.ESTOQUE ');
    SQL.Add('FROM ITENS_COMPRA I ');
    SQL.Add('INNER JOIN PRODUTO P ON P.COD_PRODUTO = I.COD_PRODUTO ');
    SQL.Add('INNER JOIN COMPRA A ON A.COD_COMPRA = I.COD_COMPRA');
    { VERIFICA SE IRÁ SER COM DUAS DATAS OU SOMENTE UMA DO DIA }
    if (xDataIni <> 0) and (xDataFim <> 0 ) then
    begin
      SQL.Add('WHERE A.DATA ' + DataBetweenSQL(xDataIni,xDataFim));
    end
    else
    begin
      SQL.Add('WHERE A.DATA = ' + DataSQL(xDataIni));
    end;

    SQL.Add('GROUP BY I.COD_PRODUTO, P.DESCRICAO, P.PRECO, P.ESTOQUE ');
    SQL.Add('ORDER BY SUM(I.QUANTIDADE) DESC ');

    Open;
    Label1.Caption := IntToStr(GraficoProdutos.Page) + '/' + IntToStr(GraficoProdutos.NumPages);
  end;
end;

procedure TTGraficoTopProdutos.btnAntesClick(Sender: TObject);
begin
  GraficoProdutos.PreviousPage;
end;

procedure TTGraficoTopProdutos.btnCancelarClick(Sender: TObject);
begin
  Close;
end;

procedure TTGraficoTopProdutos.btnDepoisClick(Sender: TObject);
begin
  GraficoProdutos.NextPage;
end;

procedure TTGraficoTopProdutos.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  case key  of
    VK_ESCAPE:
    begin
      if (btnCancelar.Enabled) and (btnCancelar.Visible) then
        btnCancelar.Click;
    end;
  end;
end;

procedure TTGraficoTopProdutos.GraficoProdutosPageChange(Sender: TObject);
begin
  Label1.Caption := IntToStr(GraficoProdutos.Page) + '/' + IntToStr(GraficoProdutos.NumPages);
end;

end.
